{"ast":null,"code":"import { normalizeStyle as _normalizeStyle, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock } from \"vue\";\nimport _imports_0 from '@/assets/WhatYouDesign-TransWit.png';\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_SloganText = _resolveComponent(\"SloganText\");\n  return _openBlock(), _createElementBlock(\"div\", {\n    \"class\": \"container\",\n    style: _normalizeStyle($setup.containerStyle)\n  }, [_createElementVNode(\"img\", {\n    \"class\": \"image\",\n    src: _imports_0,\n    style: _normalizeStyle($setup.logoStyle),\n    alt: \"WYDLogo\"\n  }, null, 4 /* STYLE */), !$setup.state.isLogoSmall ? (_openBlock(), _createBlock(_component_SloganText, {\n    key: 0\n  })) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Render SloganText only if isLogoSmall is false \"), _createElementVNode(\"button\", {\n    \"class\": \"toggle-button\",\n    onClick: _cache[0] || (_cache[0] = function () {\n      return $setup.toggleLogoSize && $setup.toggleLogoSize.apply($setup, arguments);\n    })\n  }, \"Toggle Logo Size\")], 4 /* STYLE */);\n}","map":{"version":3,"names":["_imports_0","_createElementBlock","style","_normalizeStyle","$setup","containerStyle","_createElementVNode","src","logoStyle","alt","state","isLogoSmall","_createBlock","_component_SloganText","key","_createCommentVNode","onClick","_cache","toggleLogoSize","apply","arguments"],"sources":["/Users/larshoeijmans/Documents/GitHub/WYD_Website/src/components/HomeScreen.vue"],"sourcesContent":["<template>\n  <div class=\"container\" :style=\"containerStyle\">\n    <img class=\"image\" src=\"@/assets/WhatYouDesign-TransWit.png\" :style=\"logoStyle\" alt=\"WYDLogo\">\n    <SloganText v-if=\"!state.isLogoSmall\" /> <!-- Render SloganText only if isLogoSmall is false -->\n    <button class=\"toggle-button\" @click=\"toggleLogoSize\">Toggle Logo Size</button>\n  </div>\n</template>\n\n<script>\nimport { reactive, computed } from 'vue';\nimport SloganText from '@/components/SloganText.vue'; // Import the SloganText component\n\nexport default {\nname: 'HomeScreen',\ncomponents: {\n  SloganText // Register the SloganText component\n},\nsetup() {\n  // Reactive state\n  const state = reactive({\n    isLogoSmall: false\n  });\n\n  // Method to toggle the logo size\n  const toggleLogoSize = () => {\n    state.isLogoSmall = !state.isLogoSmall;\n  };\n\n  // Computed property for logo style\n  const logoStyle = computed(() => ({\n    maxWidth: state.isLogoSmall ? '160px' : '100%',\n    transition: 'max-width 0.5s ease-in-out' // Add transition for smooth resizing\n  }));\n\n  // Computed property for container style\n  const containerStyle = computed(() => ({\n    textAlign: 'center',\n    position: 'absolute',\n    top: state.isLogoSmall ? '10px' : '50%',\n    left: '50%',\n    transform: state.isLogoSmall ? 'translate(-50%, 0)' : 'translate(-50%, -50%)',\n    transition: 'top 0.5s ease-in-out, transform 0.5s ease-in-out' // Add transition for smooth repositioning\n  }));\n\n  // Return data, methods, and computed properties accessible in the template\n  return {\n    state,\n    toggleLogoSize,\n    logoStyle,\n    containerStyle\n  };\n}\n};\n</script>\n\n<style scoped>\n.container {\ntext-align: center;\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\n}\n\n.image {\nmax-width: 100%;\nheight: auto;\n}\n\n.slogan {\nfont-family: \"League Spartan\", sans-serif;\nfont-weight: 900;\nfont-style: normal;\nfont-size: 10vh; /* Adjust the font size as needed */\ncolor: white; /* Change the color of the slogan */\nmargin-top: 9vh; /* Add some space between the image and the slogan */\n}\n\n.toggle-button {\nposition: fixed; /* Set button position to fixed */\nbottom: 20px; /* Adjust bottom position as needed */\nleft: 50%; /* Center button horizontally */\ntransform: translateX(-50%); /* Center button horizontally */\npadding: 10px 20px; /* Adjust padding as needed */\nfont-size: 16px; /* Adjust font size as needed */\nbackground-color: #ffffff; /* Button background color */\nborder: none; /* Remove button border */\nborder-radius: 5px; /* Apply button border radius */\ncursor: pointer; /* Set cursor to pointer on hover */\n}\n</style>"],"mappings":";OAEuBA,UAAyC;;;uBAD9DC,mBAAA,CAIM;IAJD,SAAM,WAAW;IAAEC,KAAK,EAD/BC,eAAA,CACiCC,MAAA,CAAAC,cAAc;MAC3CC,mBAAA,CAA8F;IAAzF,SAAM,OAAO;IAACC,GAAyC,EAAzCP,UAAyC;IAAEE,KAAK,EAFvEC,eAAA,CAEyEC,MAAA,CAAAI,SAAS;IAAEC,GAAG,EAAC;4BACjEL,MAAA,CAAAM,KAAK,CAACC,WAAW,I,cAApCC,YAAA,CAAwCC,qBAAA;IAH5CC,GAAA;EAAA,MAAAC,mBAAA,gBAG6CA,mBAAA,oDAAuD,EAChGT,mBAAA,CAA+E;IAAvE,SAAM,eAAe;IAAEU,OAAK,EAAAC,MAAA,QAAAA,MAAA;MAAA,OAAEb,MAAA,CAAAc,cAAA,IAAAd,MAAA,CAAAc,cAAA,CAAAC,KAAA,CAAAf,MAAA,EAAAgB,SAAA,CAAc;IAAA;KAAE,kBAAgB,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}