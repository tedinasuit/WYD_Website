{"ast":null,"code":"import { normalizeStyle as _normalizeStyle, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock } from \"vue\";\nimport _imports_0 from '@/assets/WhatYouDesign-TransWit.png';\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_SloganText = _resolveComponent(\"SloganText\");\n  return _openBlock(), _createElementBlock(\"div\", {\n    \"class\": \"container\",\n    style: _normalizeStyle($setup.containerStyle)\n  }, [_createElementVNode(\"img\", {\n    \"class\": \"image\",\n    src: _imports_0,\n    style: _normalizeStyle($setup.logoStyle),\n    alt: \"WYDLogo\",\n    onClick: _cache[0] || (_cache[0] = function () {\n      return $setup.toggleLogoSize && $setup.toggleLogoSize.apply($setup, arguments);\n    })\n  }, null, 4 /* STYLE */), !_ctx.state.isLogoSmall ? (_openBlock(), _createBlock(_component_SloganText, {\n    key: 0\n  })) : _createCommentVNode(\"v-if\", true)], 4 /* STYLE */);\n}","map":{"version":3,"names":["_imports_0","_createElementBlock","style","_normalizeStyle","$setup","containerStyle","_createElementVNode","src","logoStyle","alt","onClick","_cache","toggleLogoSize","apply","arguments","_ctx","state","isLogoSmall","_createBlock","_component_SloganText","key","_createCommentVNode"],"sources":["/Users/larshoeijmans/Documents/GitHub/WYD_Website/src/components/HomeScreen.vue"],"sourcesContent":["<template>\n  <div class=\"container\" :style=\"containerStyle\">\n    <img class=\"image\" src=\"@/assets/WhatYouDesign-TransWit.png\" :style=\"logoStyle\" alt=\"WYDLogo\" @click=\"toggleLogoSize\">\n    <SloganText v-if=\"!state.isLogoSmall\" />\n  </div>\n</template>\n\n<script>\nimport { ref, computed } from 'vue';\nimport SloganText from '@/components/SloganText.vue';\n\nexport default {\n  name: 'HomeScreen',\n  components: {\n    SloganText\n  },\n  setup() {\n    const isLogoSmall = ref(false); // Use ref for individual reactive properties\n    const showNavBar = ref(false);\n\n    const toggleLogoSize = () => {\n      isLogoSmall.value = !isLogoSmall.value; // Access the value property of ref\n      if (isLogoSmall.value) {\n        showNavBar.value = true;\n      }\n    };\n\n    const logoStyle = computed(() => ({\n      maxWidth: isLogoSmall.value ? '160px' : '100%', // Access the value property of ref\n      transition: 'max-width 0.5s ease-in-out'\n    }));\n\n    const containerStyle = computed(() => ({\n      textAlign: 'center',\n      position: 'absolute',\n      top: isLogoSmall.value ? '10px' : '50%', // Access the value property of ref\n      left: '50%',\n      transform: isLogoSmall.value ? 'translate(-50%, 0)' : 'translate(-50%, -50%)',\n      transition: 'top 0.5s ease-in-out, transform 0.5s ease-in-out'\n    }));\n\n    return {\n      isLogoSmall,\n      showNavBar,\n      toggleLogoSize,\n      logoStyle,\n      containerStyle\n    };\n  }\n};\n</script>\n\n\n\n\n<style scoped>\n.container {\n  text-align: center;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n\n.image {\n  max-width: 100%;\n  height: auto;\n  cursor: pointer;\n}\n\n.slogan {\n  font-family: \"League Spartan\", sans-serif;\n  font-weight: 900;\n  font-style: normal;\n  font-size: 10vh;\n  color: white;\n  margin-top: 9vh;\n}\n</style>\n"],"mappings":";OAEuBA,UAAyC;;;uBAD9DC,mBAAA,CAGM;IAHD,SAAM,WAAW;IAAEC,KAAK,EAD/BC,eAAA,CACiCC,MAAA,CAAAC,cAAc;MAC3CC,mBAAA,CAAsH;IAAjH,SAAM,OAAO;IAACC,GAAyC,EAAzCP,UAAyC;IAAEE,KAAK,EAFvEC,eAAA,CAEyEC,MAAA,CAAAI,SAAS;IAAEC,GAAG,EAAC,SAAS;IAAEC,OAAK,EAAAC,MAAA,QAAAA,MAAA;MAAA,OAAEP,MAAA,CAAAQ,cAAA,IAAAR,MAAA,CAAAQ,cAAA,CAAAC,KAAA,CAAAT,MAAA,EAAAU,SAAA,CAAc;IAAA;4BACjGC,IAAA,CAAAC,KAAK,CAACC,WAAW,I,cAApCC,YAAA,CAAwCC,qBAAA;IAH5CC,GAAA;EAAA,MAAAC,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}