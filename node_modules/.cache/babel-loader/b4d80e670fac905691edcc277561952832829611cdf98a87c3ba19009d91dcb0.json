{"ast":null,"code":"export default {\n  name: 'InstagramPage',\n  data: function data() {\n    return {\n      isReversed: false // Flag to determine the order of items\n    };\n  },\n  mounted: function mounted() {\n    // Check if the screen width is less than 768px (tablet and below)\n    if (window.innerWidth <= 768) {\n      this.isReversed = true; // Reverse the order of items for smaller screens\n    }\n    // Listen for window resize event to dynamically update the layout\n    window.addEventListener('resize', this.handleResize);\n  },\n  methods: {\n    handleResize: function handleResize() {\n      // Check if the screen width is less than 768px (tablet and below)\n      this.isReversed = window.innerWidth <= 768;\n    }\n  },\n  beforeDestroy: function beforeDestroy() {\n    // Remove the resize event listener to prevent memory leaks\n    window.removeEventListener('resize', this.handleResize);\n  }\n};","map":{"version":3,"names":["name","data","isReversed","mounted","window","innerWidth","addEventListener","handleResize","methods","beforeDestroy","removeEventListener"],"sources":["/Users/larshoeijmans/Documents/GitHub/WYD_Website/src/components/BrandingWebsite.vue"],"sourcesContent":["<template>\n    <div class=\"flexbox\" :class=\"{ 'reverse': isReversed }\">\n      <div class=\"text-wrap\">\n        <div class=\"title\">\n          <p>INSTAGRAM PAGE</p>\n        </div>\n        <div class=\"text\">\n          <p>lorem ipsum motherfucker lorem ipsum motherfucker lorem ipsum motherfucker lorem ipsum motherfucker lorem ipsum motherfucker</p>\n        </div>\n      </div>\n      <div>\n        <img src=\"@/assets/Figma.png\" class=\"image\">\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  export default {\n    name: 'InstagramPage',\n    data() {\n      return {\n        isReversed: false // Flag to determine the order of items\n      };\n    },\n    mounted() {\n      // Check if the screen width is less than 768px (tablet and below)\n      if (window.innerWidth <= 768) {\n        this.isReversed = true; // Reverse the order of items for smaller screens\n      }\n      // Listen for window resize event to dynamically update the layout\n      window.addEventListener('resize', this.handleResize);\n    },\n    methods: {\n      handleResize() {\n        // Check if the screen width is less than 768px (tablet and below)\n        this.isReversed = window.innerWidth <= 768;\n      }\n    },\n    beforeDestroy() {\n      // Remove the resize event listener to prevent memory leaks\n      window.removeEventListener('resize', this.handleResize);\n    }\n  };\n  </script>\n  \n  <style scoped>\n  .flexbox {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-wrap: wrap; /* Allow items to wrap to next line */\n  }\n  \n  .text-wrap {\n    width: 100%; /* Ensure text container takes full width */\n    padding: 0 1rem; /* Add horizontal padding to text container */\n  }\n  \n  .image {\n    width: 80%; /* Ensure image fills its container */\n    max-height: 60vh; /* Limit image height to 60% of viewport height */\n    object-fit: contain; /* Scale the image while preserving its aspect ratio */\n    margin-bottom: 2rem; /* Add some spacing between image and text */\n  }\n  \n  .title {\n    font-size: 1.5rem; /* Adjust title font size */\n    margin-bottom: 1rem; /* Add spacing below the title */\n  }\n  \n  .text {\n    font-size: 1rem; /* Adjust text font size */\n  }\n  \n  /* Reverse the order of flex items when necessary */\n  .reverse {\n    flex-direction: column-reverse;\n  }\n  </style>\n  "],"mappings":"AAiBE,eAAe;EACbA,IAAI,EAAE,eAAe;EACrBC,IAAI,WAAAA,KAAA,EAAG;IACL,OAAO;MACLC,UAAU,EAAE,KAAI,CAAE;IACpB,CAAC;EACH,CAAC;EACDC,OAAO,WAAAA,QAAA,EAAG;IACR;IACA,IAAIC,MAAM,CAACC,UAAS,IAAK,GAAG,EAAE;MAC5B,IAAI,CAACH,UAAS,GAAI,IAAI,EAAE;IAC1B;IACA;IACAE,MAAM,CAACE,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAACC,YAAY,CAAC;EACtD,CAAC;EACDC,OAAO,EAAE;IACPD,YAAY,WAAAA,aAAA,EAAG;MACb;MACA,IAAI,CAACL,UAAS,GAAIE,MAAM,CAACC,UAAS,IAAK,GAAG;IAC5C;EACF,CAAC;EACDI,aAAa,WAAAA,cAAA,EAAG;IACd;IACAL,MAAM,CAACM,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAACH,YAAY,CAAC;EACzD;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}